name: Enhanced Download and Upload to Telegram

on:
  workflow_dispatch:
    inputs:
      download_urls:
        description: 'Comma-separated list of download URLs (YouTube, Google Drive, Mega, Dropbox, OneDrive, Direct Link, etc.)'
        required: true
      is_video:
        description: 'Is this a video? (Toggle to enable yt-dlp for video downloads)'
        required: true
        type: boolean
        default: false

jobs:
  download-and-upload:
    runs-on: ubuntu-latest
    environment: Telegram  # Reference the Telegram environment
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y curl python3-pip ffmpeg megatools zip

      - name: Install Python dependencies
        run: |
          pip install python-telegram-bot

      - name: Install yt-dlp, gdown, and rclone
        run: |
          sudo pip install yt-dlp gdown
          curl https://rclone.org/install.sh | sudo bash

      - name: Configure rclone
        run: |
          mkdir -p ~/.config/rclone
          echo "${{ secrets.RCLONE_CONFIG }}" > ~/.config/rclone/rclone.conf

      - name: Debug Telegram credentials
        run: |
          echo "TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}"
          echo "TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}"

      - name: Test Telegram API
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="Test message from GitHub Actions"

      - name: Download files
        run: |
          IFS=',' read -r -a URLS <<< "${{ github.event.inputs.download_urls }}"
          for URL in "${URLS[@]}"; do
            echo "Downloading: $URL"

            # Use yt-dlp if is_video is true, otherwise handle as direct/cloud link
            if [ "${{ github.event.inputs.is_video }}" = "true" ]; then
              yt-dlp "$URL"
            else
              if [[ "$URL" == *"drive.google.com"* ]]; then
                gdown "$URL"
              elif [[ "$URL" == *"mega.nz"* ]]; then
                megadl "$URL" --username="${{ secrets.MEGA_EMAIL }}" --password="${{ secrets.MEGA_PASSWORD }}"
              elif [[ "$URL" == *"dropbox.com"* ]]; then
                curl -O "$(echo "$URL" | sed 's/dl=0/dl=1/')"
              elif [[ "$URL" == *"onedrive.live.com"* || "$URL" == *"1drv.ms"* ]]; then
                rclone copyurl "$URL" ./ --config ~/.config/rclone/rclone.conf
              else
                curl -O "$URL"
              fi
            fi

            # Detect file type
            FILE=$(ls -t | head -1)  # Get the most recently downloaded file
            FILE_TYPE=$(file --mime-type -b "$FILE")
            echo "File type: $FILE_TYPE"

            # Convert video if needed
            if echo "$FILE_TYPE" | grep -q "video"; then
              if ! echo "$FILE_TYPE" | grep -q "mp4"; then
                ffmpeg -i "$FILE" -c:v libx264 -c:a aac "${FILE%.*}.mp4"
                FILE="${FILE%.*}.mp4"  # Update FILE variable to point to the converted file
              fi
            fi

            # Check file size
            FILE_SIZE=$(stat -c%s "$FILE")
            if [[ $FILE_SIZE -gt 2000 * 1024 * 1024 ]]; then
              curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
              -d text="❌ File is too large (>2 GB). Cannot upload to Telegram."
              continue
            fi

            # Upload file to Telegram using the Python script
            python3 upload_to_telegram.py "$FILE" "${{ secrets.TELEGRAM_BOT_TOKEN }}" "${{ secrets.TELEGRAM_CHAT_ID }}"

            # Clean up
            rm -rf "$FILE"
          done

      - name: Notify completion
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="✅ Workflow completed! All files processed."
